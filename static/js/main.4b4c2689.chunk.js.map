{"version":3,"sources":["cryptomonedas.png","hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Error.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomoneda","CoinInfo","Name","FullName","Id","MensajeError","p","Error","mensaje","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","console","log","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","className","Contenedor","Imagen","img","Heading","h1","App","guardarResultado","cargando","guardarCargando","url","setTimeout","DISPLAY","cotizarCriptomoneda","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAAe,MAA0B,0C,OCInCA,EAAQC,IAAOC,MAAV,uNAWLC,EAASF,IAAOG,OAAV,4LAiCGC,EAtBG,SAACH,EAAOI,EAAcC,GAEpC,MAAiCC,mBAASF,GAA1C,mBAAOG,EAAP,KAAcC,EAAd,KAiBA,MAAO,CAACD,EAfY,kBACZ,eAAC,WAAD,WACI,cAACT,EAAD,UAAQE,IACR,eAACC,EAAD,CACIQ,SAAW,SAAAC,GAAC,OAAIF,EAAgBE,EAAEC,OAAOC,QACzCA,MAAOL,EAFX,UAII,wBAAQK,MAAM,GAAd,0BACCP,EAASQ,KAAI,SAAAC,GAAM,OAChB,wBAA4BF,MAAOE,EAAOC,OAA1C,SAAmDD,EAAOE,QAA7CF,EAAOC,kBAMdP,IC1CxBV,EAAQC,IAAOC,MAAV,mNASLC,EAASF,IAAOG,OAAV,4LAgCGe,EAtBS,SAACjB,EAAOI,EAAcC,GAE1C,MAAiCC,mBAASF,GAA1C,mBAAOG,EAAP,KAAcC,EAAd,KAiBA,MAAO,CAACD,EAfa,kBACb,eAAC,WAAD,WACI,cAAC,EAAD,UAAQP,IACR,eAAC,EAAD,CACIS,SAAW,SAAAC,GAAC,OAAIF,EAAgBE,EAAEC,OAAOC,QACzCA,MAAOL,EAFX,UAII,wBAAQK,MAAM,GAAd,0BACEP,EAASQ,KAAI,SAAAC,GAAM,OACjB,wBAAiCF,MAAOE,EAAOI,SAASC,KAAxD,SAA+DL,EAAOI,SAASE,UAAlEN,EAAOI,SAASG,cAMtBb,I,gBCtCzBc,EAAevB,IAAOwB,EAAV,sPAqBHC,EAND,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZ,OACI,cAACH,EAAD,UAAeG,KCdjBC,EAAQ3B,IAAO4B,MAAV,wWA4EIC,EAzDI,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,cAAcC,EAAyB,EAAzBA,oBAE/B,EAA2CxB,mBAAS,IAApD,mBAAOyB,EAAP,KAAmBC,EAAnB,KACA,EAA8B1B,oBAAS,GAAvC,mBAAO2B,EAAP,KAAcC,EAAd,KAWA,EAA+B/B,EAAU,kBAAmB,GAT5C,CAEZ,CAACY,OAAQ,MAAOC,OAAQ,2BACxB,CAACD,OAAQ,MAAOC,OAAQ,oBACxB,CAACD,OAAQ,MAAOC,OAAQ,QACxB,CAACD,OAAQ,MAAOC,OAAQ,qBAI5B,mBAAOmB,EAAP,KAAcC,EAAd,KAEA,EAAmCnB,EAAgB,wBAAwB,GAAGc,GAA9E,mBAAOM,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,YACY,uCAAG,4BAAAC,EAAA,4DACL,0EADK,SAEOC,IAAMC,IADlB,2EADK,OAEXC,EAFW,OAIjBX,EAAqBW,EAAUC,KAAKC,MAJnB,2CAAH,qDAMlBC,KACF,IAgBF,OACI,uBAAMC,SAfY,SAAArC,GAClBA,EAAEsC,iBAEY,KAAXb,GAAkC,KAAjBE,GAIhBH,GAAa,GACbL,EAAcM,GACdL,EAAoBO,IALpBH,GAAa,IAWjB,UAECD,EAAQ,cAAC,EAAD,CAAOR,QAAQ,sCAA8C,KAEtE,cAACW,EAAD,IACA,cAACE,EAAD,IACI,cAACZ,EAAD,CACIuB,KAAK,SACLrC,MAAM,iBCzEhBsC,EAAenD,IAAOoD,IAAV,8FAKZC,EAAOrD,IAAOwB,EAAV,kGAQJ8B,EAAStD,IAAOwB,EAAV,kGA4BG+B,EApBI,SAAC,GAAiB,IAAhBX,EAAe,EAAfA,UAEjB,OAAqC,IAAlCY,OAAOC,KAAKb,GAAWc,OAAqB,MAE/CC,QAAQC,IAAIhB,GAKR,eAACO,EAAD,WACI,eAACG,EAAD,4BAAsB,+BAAOV,EAAUiB,WACvC,eAACR,EAAD,0CAAkC,+BAAOT,EAAUkB,aACnD,eAACT,EAAD,0CAAkC,+BAAOT,EAAUmB,YACnD,eAACV,EAAD,0CAAkC,+BAAOT,EAAUoB,qBACnD,eAACX,EAAD,oCAA4B,+BAAOT,EAAUqB,qBChB1CC,G,MApBC,WACZ,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,8BCTrBC,EAAYpE,IAAOoD,IAAT,4LAUViB,EAASrE,IAAOsE,IAAV,sEAMNC,EAAUvE,IAAOwE,GAAV,+TAuEEC,MApDf,WAEE,MAA8BlE,mBAAS,IAAvC,mBAAM6B,EAAN,KAAaN,EAAb,KACA,EAA0CvB,mBAAS,IAAnD,mBAAM+B,EAAN,KAAmBP,EAAnB,KACA,EAAoCxB,mBAAS,IAA7C,mBAAMqC,EAAN,KAAiB8B,EAAjB,KACA,EAAmCnE,oBAAS,GAA5C,mBAAMoE,EAAN,KAAgBC,EAAhB,KAEApC,qBAAU,YACgB,uCAAG,8BAAAC,EAAA,yDACf,KAATL,EADwB,wDAGrByC,EAHqB,sEAG+CvC,EAH/C,kBAGqEF,GAHrE,SAKHM,IAAMC,IAAIkC,GALP,OAKrBjC,EALqB,OAO3BgC,GAAgB,GAEhBE,YAAW,WACPF,GAAgB,GAChBF,EAAiB9B,EAAUC,KAAKkC,QAAQzC,GAAcF,MACxD,KAZyB,2CAAH,qDAgBzB4C,KAEC,CAAC5C,EAAOE,IAEV,IAAM2C,EAAcN,EAAY,cAAC,EAAD,IAAa,cAAC,EAAD,CAAY/B,UAAaA,IAEtE,OACE,eAACwB,EAAD,WACI,8BACE,cAACC,EAAD,CACEa,IAAKC,EACLC,IAAI,oBAGR,gCACE,cAACb,EAAD,+CACA,cAAC,EAAD,CACEzC,cAAeA,EACfC,oBAAqBA,IAGvBkD,SC3EKI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4b4c2689.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React,{Fragment, useState} from 'react';\r\nimport styled from '@emotion/styled'\r\n\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display: block;\r\n\r\n\r\n`\r\nconst Select = styled.select`\r\n\r\n    width: 100%;\r\n    display: block;\r\n    padding:1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n\r\n    const [state, actualizarState] = useState(stateInicial)\r\n\r\n    const Seleccionar = () =>(\r\n            <Fragment>\r\n                <Label>{label}</Label>\r\n                <Select\r\n                    onChange= {e => actualizarState(e.target.value)}\r\n                    value={state}\r\n                >\r\n                    <option value=\"\">-Seleccione-</option>\r\n                    {opciones.map(opcion =>(\r\n                        <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre}</option>\r\n                    ))}\r\n                </Select>\r\n            </Fragment>\r\n    );\r\n\r\n    return [state,Seleccionar,actualizarState];\r\n}\r\n\r\nexport default useMoneda;","import React,{Fragment, useState} from 'react';\r\nimport styled from '@emotion/styled'\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display: block;\r\n`\r\nconst Select = styled.select`\r\n\r\n    width: 100%;\r\n    display: block;\r\n    padding:1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`\r\nconst useCriptomoneda = (label, stateInicial, opciones) => {\r\n\r\n    const [state, actualizarState] = useState(stateInicial)\r\n\r\n    const SelectCripto = () =>(\r\n            <Fragment>\r\n                <Label>{label}</Label>\r\n                <Select\r\n                    onChange= {e => actualizarState(e.target.value)}\r\n                    value={state}\r\n                >\r\n                    <option value=\"\">-Seleccione-</option>\r\n                     {opciones.map(opcion =>(\r\n                        <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName}</option>\r\n                    ))} \r\n                </Select>\r\n            </Fragment>\r\n    );\r\n\r\n    return [state,SelectCripto,actualizarState];\r\n}\r\n\r\nexport default useCriptomoneda;","import React from 'react';\r\nimport styled from '@emotion/styled'\r\n\r\nconst MensajeError = styled.p`\r\n\r\n    background-color: #b7322c;\r\n    padding: 1rem;\r\n    color: #FFF;\r\n    font-size: 30px;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    font-family: 'Bebas Neue', cursive;\r\n\r\n`\r\n\r\n\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (  \r\n        <MensajeError>{mensaje}</MensajeError>\r\n    );\r\n}\r\n \r\nexport default Error;","import React,{useEffect, useState} from 'react';\r\nimport styled from '@emotion/styled'\r\nimport useMoneda from '../hooks/useMoneda'\r\nimport useCriptomoneda from '../hooks/useCriptomoneda'\r\nimport axios from 'axios';\r\nimport Error from './Error'\r\nconst Boton = styled.input`\r\n    margin-top: 20px;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    background-color: #66a2fe;\r\n    border: none;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    color:#FFF;\r\n    transition: background-color .3s ease;\r\n\r\n    &:hover{\r\n        background-color: #326AC0;\r\n        cursor: pointer;\r\n    }\r\n\r\n`\r\n\r\nconst Formulario = ({guardarMoneda,guardarCriptomoneda}) => {\r\n\r\n    const [listacripto,guardarCriptomonedas] = useState([]);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const MONEDAS = [\r\n\r\n        {codigo: 'USD', nombre: 'Dolar de Estados Unidos'},\r\n        {codigo: 'ARS', nombre: 'Pesos Argentinos'},\r\n        {codigo: 'EUR', nombre: 'Euro'},\r\n        {codigo: 'GBP', nombre: 'Libra Esterlina'}\r\n    ]\r\n\r\n\r\n    const [moneda,SelectMonedas] = useMoneda('Elige tu Moneda', '', MONEDAS);\r\n\r\n    const [criptomoneda,SelectCripto]= useCriptomoneda('Elige tu Criptomoneda','',listacripto)\r\n\r\n    useEffect(()=>{\r\n        const consultarAPI = async() =>{\r\n            const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\r\n            const resultado = await axios.get(url)\r\n\r\n            guardarCriptomonedas(resultado.data.Data);\r\n        }\r\n        consultarAPI();\r\n    },[])\r\n\r\n    const cotizarMoneda = e => {\r\n        e.preventDefault();\r\n\r\n        if(moneda === '' || criptomoneda === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n            guardarError(false);\r\n            guardarMoneda(moneda);\r\n            guardarCriptomoneda(criptomoneda);\r\n        \r\n    }\r\n\r\n\r\n    return ( \r\n        <form onSubmit={cotizarMoneda}>\r\n        \r\n        {error ? <Error mensaje=\"Todos los campos son obligatorios\"></Error>: null}\r\n\r\n        <SelectMonedas/>\r\n        <SelectCripto/>\r\n            <Boton\r\n                type=\"submit\"\r\n                value=\"Calcular\"\r\n            ></Boton>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport styled from '@emotion/styled'\r\n\r\nconst ResultadoDiv  =styled.div`\r\n    color: #FFF;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Info = styled.p`\r\n    font-size: 18px;\r\n\r\n    span{\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Precio = styled.p`\r\n    font-size: 30px;\r\n    span{\r\n        font-weight: bold;\r\n    }\r\n\r\n`;\r\n\r\nconst Cotizacion = ({resultado}) => {\r\n\r\n    if(Object.keys(resultado).length === 0) return null;\r\n\r\n    console.log(resultado)\r\n\r\n\r\n    return ( \r\n\r\n        <ResultadoDiv>\r\n            <Precio>El precio es: <span>{resultado.PRICE}</span></Precio>\r\n            <Info>El precio mas alto del dia: <span>{resultado.HIGHDAY}</span></Info>\r\n            <Info>El precio mas bajo del dia: <span>{resultado.LOWDAY}</span></Info>\r\n            <Info>Variacion ultimas 24 horas: <span>{resultado.CHANGEPCT24HOUR}</span></Info>\r\n            <Info>Ultima actualizacion: <span>{resultado.LASTUPDATE}</span></Info>\r\n        </ResultadoDiv>\r\n\r\n     );\r\n}\r\n \r\nexport default Cotizacion;","import React from 'react';\r\nimport './Spinner.css'\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React,{useState, useEffect} from 'react';\nimport styled from '@emotion/styled'\nimport imagen from './cryptomonedas.png'\nimport Formulario from './components/Formulario'\nimport Cotizacion from './components/Cotizacion'\nimport Spinner from './components/Spinner'\nimport axios from 'axios'\nconst Contenedor =styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media(min-width:992px){\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width:100%;\n  margin-top: 5rem;\n\n`;\n\nconst Heading = styled.h1`\n  font-family: 'Bebas Neue', cursive;\n  color:#FFF;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after{\n    content: '';\n    width: 100px;\n    height: 6px;\n    background-color: #66A2FE;\n    display: block;\n  }\n\n`;\n\nfunction App() {\n\n  const[moneda,guardarMoneda] = useState('');\n  const[criptomoneda,guardarCriptomoneda] = useState('');\n  const[resultado, guardarResultado]= useState({});\n  const[cargando, guardarCargando] = useState(false);\n\n  useEffect(()=>{\n   const cotizarCriptomoneda = async () => {\n    if(moneda==='')return;\n\n    const url =`https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n    const resultado = await axios.get(url);\n\n    guardarCargando(true);\n\n    setTimeout(()=>{\n        guardarCargando(false)\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n    },3000)\n\n    \n   }\n   cotizarCriptomoneda();\n\n  },[moneda,criptomoneda])\n\n  const componente = (cargando) ? <Spinner/> : <Cotizacion resultado = {resultado}></Cotizacion>\n\n  return (\n    <Contenedor>\n        <div>\n          <Imagen\n            src={imagen}\n            alt=\"imagen cripto\"\n          />\n        </div>\n        <div>\n          <Heading>Cotiza Criptomonedas al instante</Heading>\n          <Formulario\n            guardarMoneda={guardarMoneda}\n            guardarCriptomoneda={guardarCriptomoneda}\n          ></Formulario>\n\n         {componente}\n\n        </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}